/* main.css */

/* ! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com */

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

:root {
    --animate-duration: 1s;
    --animate-delay: 1s;
    --animate-repeat: 1;
    --font-family-sans: 'ps-Inter', sans-serif;
    --font-family-mono: 'ps-JetBrainsMono', monospace;
    --accent: 37 99 235; /* blue-600 */
    --light: 156 163 175; /* gray-400 */
    --dark: 17 24 39; /* gray-900 */
    --white: 255 255 255; /* white color */
  }

*:focus-visible {
  border-radius: 0.25rem;
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: rgb(var(--accent) / 0.8);
}

body {
    font-family: var(--font-family-sans);
    position: relative;
    min-width: 20rem;
    overflow-x: hidden;
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: rgb(var(--dark) / var(--tw-text-opacity));
  }

body:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(var(--dark) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(var(--light) / var(--tw-text-opacity));
}

code {
  color: rgb(185 28 28 / var(--tw-text-opacity));
  --tw-text-opacity: 0.9;
}

code:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(248 113 113 / var(--tw-text-opacity));
}

code {
    font-family: var(--font-family-mono);
  }

a {
  --tw-text-opacity: 1;
  color: rgb(var(--accent) / var(--tw-text-opacity));
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 250ms;
}

a:hover {
  color: rgb(var(--accent) / 0.6);
}

h1,
  h2,
  h3 {
    font-weight: bold;
    background: linear-gradient(90deg, #2176ff 25%, #7a69ea 50%, #cc69ea 75%, #98b1d6 100%);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

h1 {
  margin-bottom: 1rem;
  font-size: 2.25rem;
  line-height: 2.5rem;
}

h2 {
  margin-bottom: 1rem;
  font-size: 1.875rem;
  line-height: 2.25rem;
}

h3 {
  margin-bottom: 0.75rem;
  font-size: 1.5rem;
  line-height: 2rem;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {

  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {

  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {

  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {

  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {

  .container {
    max-width: 1536px;
  }
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.bottom-0 {
  bottom: 0px;
}

.left-0 {
  left: 0px;
}

.top-0 {
  top: 0px;
}

.-z-\[1\] {
  z-index: -1;
}

.z-10 {
  z-index: 10;
}

.m-0 {
  margin: 0px;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.my-6 {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-8 {
  margin-bottom: 2rem;
}

.ml-12 {
  margin-left: 3rem;
}

.ml-4 {
  margin-left: 1rem;
}

.mr-6 {
  margin-right: 1.5rem;
}

.mr-\[2px\] {
  margin-right: 2px;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.h-40 {
  height: 10rem;
}

.h-full {
  height: 100%;
}

.h-screen {
  height: 100vh;
}

.min-h-52 {
  min-height: 13rem;
}

.min-h-screen {
  min-height: 100vh;
}

.w-full {
  width: 100%;
}

.w-screen {
  width: 100vw;
}

.flex-grow {
  flex-grow: 1;
}

.columns-auto {
  columns: auto;
}

.flex-col {
  flex-direction: column;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.gap-4 {
  gap: 1rem;
}

.gap-x-3 {
  column-gap: 0.75rem;
}

.overflow-hidden {
  overflow: hidden;
}

.rounded-md {
  border-radius: 0.375rem;
}

.border {
  border-width: 1px;
}

.border-solid {
  border-style: solid;
}

.border-accent {
  --tw-border-opacity: 1;
  border-color: rgb(var(--accent) / var(--tw-border-opacity));
}

.bg-transparent {
  background-color: transparent;
}

.bg-\[url\(\'\/assets\/images\/burg\.jpg\'\)\] {
  background-image: url('/assets/images/burg.jpg');
}

.bg-\[url\(\'\/assets\/images\/curved\.jpg\'\)\] {
  background-image: url('/assets/images/curved.jpg');
}

.bg-\[url\(\'\/assets\/images\/world\.jpg\'\)\] {
  background-image: url('/assets/images/world.jpg');
}

.bg-gradient-to-b {
  background-image: linear-gradient(to bottom, var(--tw-gradient-stops));
}

.from-black\/80 {
  --tw-gradient-from: rgb(0 0 0 / 0.8) var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-indigo-950\/70 {
  --tw-gradient-from: rgb(30 27 75 / 0.7) var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(30 27 75 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.via-black\/60 {
  --tw-gradient-to: rgb(0 0 0 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), rgb(0 0 0 / 0.6) var(--tw-gradient-via-position), var(--tw-gradient-to);
}

.via-black\/95 {
  --tw-gradient-to: rgb(0 0 0 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), rgb(0 0 0 / 0.95) var(--tw-gradient-via-position), var(--tw-gradient-to);
}

.to-black\/80 {
  --tw-gradient-to: rgb(0 0 0 / 0.8) var(--tw-gradient-to-position);
}

.to-indigo-950\/70 {
  --tw-gradient-to: rgb(30 27 75 / 0.7) var(--tw-gradient-to-position);
}

.bg-cover {
  background-size: cover;
}

.bg-\[50\%\] {
  background-position: 50%;
}

.object-cover {
  object-fit: cover;
}

.p-0 {
  padding: 0px;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.pb-4 {
  padding-bottom: 1rem;
}

.pb-6 {
  padding-bottom: 1.5rem;
}

.pt-1 {
  padding-top: 0.25rem;
}

.pt-12 {
  padding-top: 3rem;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.indent-5 {
  text-indent: 1.25rem;
}

.indent-6 {
  text-indent: 1.5rem;
}

.text-\[42px\] {
  font-size: 42px;
}

.font-bold {
  font-weight: 700;
}

.font-light {
  font-weight: 300;
}

.font-medium {
  font-weight: 500;
}

.uppercase {
  text-transform: uppercase;
}

.italic {
  font-style: italic;
}

.text-accent {
  --tw-text-opacity: 1;
  color: rgb(var(--accent) / var(--tw-text-opacity));
}

.text-gray-600 {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}

.text-light {
  --tw-text-opacity: 1;
  color: rgb(var(--light) / var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.underline {
  text-decoration-line: underline;
}

.decoration-accent {
  text-decoration-color: rgb(var(--accent) / 1);
}

.decoration-4 {
  text-decoration-thickness: 4px;
}

.underline-offset-4 {
  text-underline-offset: 4px;
}

.drop-shadow-hx {
  --tw-drop-shadow: drop-shadow(0 0 5px rgba(#000,0.5));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.sepia {
  --tw-sepia: sepia(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-250 {
  transition-duration: 250ms;
}

.animated {
    animation-duration: var(--animate-duration);
    animation-fill-mode: both;
  }

.animated.infinite {
    animation-iteration-count: infinite;
  }

.animated.repeat-1 {
    animation-iteration-count: var(--animate-repeat);
  }

.animated.repeat-2 {
    animation-iteration-count: calc(var(--animate-repeat) * 2);
  }

.animated.repeat-3 {
    animation-iteration-count: calc(var(--animate-repeat) * 3);
  }

.animated.delay-1s {
    animation-delay: var(--animate-delay);
  }

.animated.delay-2s {
    animation-delay: calc(var(--animate-delay) * 2);
  }

.animated.delay-3s {
    animation-delay: calc(var(--animate-delay) * 3);
  }

.animated.delay-4s {
    animation-delay: calc(var(--animate-delay) * 4);
  }

.animated.delay-5s {
    animation-delay: calc(var(--animate-delay) * 5);
  }

.animated.faster {
    animation-duration: calc(var(--animate-duration) / 2);
  }

.animated.fast {
    animation-duration: calc(var(--animate-duration) * 0.8);
  }

.animated.slow {
    animation-duration: calc(var(--animate-duration) * 2);
  }

.animated.slower {
    animation-duration: calc(var(--animate-duration) * 3);
  }

@media print, (prefers-reduced-motion: reduce) {
    .animated {
      animation-duration: 1ms !important;
      transition-duration: 1ms !important;
      animation-iteration-count: 1 !important;
    }

    .animated[class*='Out'] {
      opacity: 0;
    }
  }

/* fadeIn */

@keyframes fadeIn {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }

.fadeIn {
    animation-name: fadeIn;
  }

/* fadeInUp */

@keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translate3d(0, 100%, 0);
    }

    to {
      opacity: 1;
      transform: translate3d(0, 0, 0);
    }
  }

.fadeInUp {
    animation-name: fadeInUp;
  }

/* user other custom styles */

/* button up to top*/

.back-to-top {
  position: absolute;
  bottom: 0;
  right: 3rem;
  width: 2.25rem;
  height: 2.25rem;
  border-radius: 50%;
  transition: all 1s;
  opacity: 0;
}

.back-to-top:hover {
    cursor: pointer;
  }

.back-to-top svg {
    width: 100%;
    height: 100%;
    transition: all 250ms;
    fill: rgba(var(--accent) / 0.9);
  }

.back-to-top svg:hover {
      fill: rgba(var(--accent) / 0.8);
    }

.back-to-top.up {
    bottom: 0.75rem;
    opacity: 1;
  }

.back-to-top.down {
    bottom: -0.5rem;
    opacity: 0;
  }

/* color mode switcher*/

.color-switcher {
  position: absolute;
  line-height: 0.8;
  margin: 0;
  padding: 0;
  right: calc(50% - 400px);
  top: 30px;
}

@media (max-width: 820px) {
  .color-switcher {
    right: 20px;
  }
}

/* color-switcher button */

.color-switcher button {
  position: relative;
  margin: 0;
  padding: 0;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: transparent;
  color: #fff;
}

.color-switcher button:focus {
  box-shadow: none;
  outline: none;
}

.color-switcher button svg {
  position: relative;
  display: block;
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
}

/* hidden class*/

.hidden {
  display: none !important;
}

/* animate.css */

/* https://github.com/animate-css/animate.css/ */

/* common.css */

/* waves.css */

/* Waves Animation & Styling */

.waves {
  --waves-color: var(--white);
  --waves-position: relative;
  --waves-width: 100%;
  --waves-height: 8rem;
  --waves-min-height: 6rem;
  --waves-max-height: 10rem;
  --waves-margin-bottom: -0.4rem;
  --waves-height-sm: 3rem;
  --waves-min-height-sm: var(--waves-height-sm);
  --waves-height-md: 5rem;
  --waves-min-height-md: var(--waves-height-md);
  --waves-rotate: rotate(180deg);
  --moving-waves-keyframe-0: translate3d(-90px, 0, 0);
  --moving-waves-keyframe-100: translate3d(85px, 0, 0);
  --moving-waves-animation: move-forever 40s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite;
  --moving-waves-child-1-delay: -2s;
  --moving-waves-child-1-duration: 11s;
  --moving-waves-child-2-delay: -4s;
  --moving-waves-child-2-duration: 13s;
  --moving-waves-child-3-delay: -3s;
  --moving-waves-child-3-duration: 15s;
  --moving-waves-child-4-delay: -4s;
  --moving-waves-child-4-duration: 20s;
  --moving-waves-child-5-delay: -4s;
  --moving-waves-child-5-duration: 25s;
  --moving-waves-child-6-delay: -3s;
  --moving-waves-child-6-duration: 30s;
}

/* moving waves animation */

.waves {
  position: var(--waves-position);
  width: var(--waves-width);
  height: var(--waves-height);
  margin-bottom: var(--waves-margin-bottom);
  fill: none;

  /*Fix for safari gap*/
  min-height: var(--waves-min-height);
  max-height: var(--waves-max-height);
}

.waves.no-animation .moving-waves > use {
    animation: none;
  }

.wave-rotate {
  transform: var(--waves-rotate);
}

/* Animation for the waves */

.moving-waves > use {
  animation: var(--moving-waves-animation);
}

.moving-waves > use:nth-child(1) {
  animation-delay: var(--moving-waves-child-1-delay);
  animation-duration: var(--moving-waves-child-1-duration);
  fill: rgba(var(--waves-color) / 0.4);
}

.moving-waves > use:nth-child(2) {
  animation-delay: var(--moving-waves-child-2-delay);
  animation-duration: var(--moving-waves-child-2-duration);
  fill: rgba(var(--waves-color) / 0.35);
}

.moving-waves > use:nth-child(3) {
  animation-delay: var(--moving-waves-child-3-delay);
  animation-duration: var(--moving-waves-child-3-duration);
  fill: rgba(var(--waves-color) / 0.25);
}

.moving-waves > use:nth-child(4) {
  animation-delay: var(--moving-waves-child-4-delay);
  animation-duration: var(--moving-waves-child-4-duration);
  fill: rgba(var(--waves-color) / 0.2);
}

.moving-waves > use:nth-child(5) {
  animation-delay: var(--moving-waves-child-5-delay);
  animation-duration: var(--moving-waves-child-5-duration);
  fill: rgba(var(--waves-color) / 0.15);
}

.moving-waves > use:nth-child(6) {
  animation-delay: var(--moving-waves-child-6-delay);
  animation-duration: var(--moving-waves-child-6-duration);
  fill: rgba(var(--waves-color) / 1);
}

@keyframes move-forever {
  0% {
    transform: var(--moving-waves-keyframe-0);
  }

  100% {
    transform: var(--moving-waves-keyframe-100);
  }
}

/* Shrinking for mobile */

@media (max-width: 768px) {
  .waves {
    height: var(--waves-height-md);
    min-height: var(--waves-min-height-md);
  }
}

@media (max-width: 640px) {
  .waves {
    height: var(--waves-height-sm);
    min-height: var(--waves-min-height-sm);
  }
}

/* Color mode */

.dark .waves {
  --waves-color: var(--dark);
}

/* buttons.css */

.buttons {
  display: flex;
  justify-content: space-between;
  gap: 2rem;
}

.mybtn {
  position: relative;
  display: inline-block;
  color: #fff;
  padding: 0.75rem 3rem;
  border-radius: 3rem;
  font-size: 1.5rem;
  font-weight: normal;
  text-decoration: none;
  box-shadow: 3px 5px rgba(0, 0, 0, 0.1);
  border-top: 1px solid rgba(0, 0, 0, 0.1);
  overflow: hidden;
}

.mybtn.one {
    background: linear-gradient(90deg, #6616d0, #ac34e7);
  }

.mybtn.two {
    background: linear-gradient(90deg, #025ce3, #4e94fd);
  }

.mybtn:hover {
    color: #fff;
  }

.overlay {
  position: absolute;
  background: #fff;
  top: 0;
  left: 0;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  animation: blink 0.5s linear;
}

@keyframes blink {
  0% {
    opacity: 0.3;
    height: 0;
    width: 0;
  }
  100% {
    height: 30rem;
    width: 30rem;
    opacity: 0;
  }
}

.butwrapper {
  margin: 2rem auto;
}

.butcart {
  position: relative;
  height: 4rem;
  width: 16rem;
  border-radius: 2rem;
  overflow: hidden;
}

.butcart .button-layer {
    position: absolute;
    height: 100%;
    width: 300%;
    left: -100%;
    background: linear-gradient(135deg, #025ce3, #4e94fd, #025ce3, #4e94fd);
    transition: all 0.4s ease;
    border-radius: 2rem;
  }

.butcart .gradbtn {
    position: relative;
    height: 100%;
    width: 100%;
    padding: 0;
    background: none;
    outline: none;
    border: 0 solid transparent;
    border-radius: 2rem;
    font-size: 1.5rem;
    letter-spacing: 1px;
    font-weight: 600;
    color: #fff;
  }

.butcart:hover .button-layer {
    left: 0;
  }

.first-letter\:text-2xl::first-letter {
  font-size: 1.5rem;
  line-height: 2rem;
}

.first-letter\:font-bold::first-letter {
  font-weight: 700;
}

.first-letter\:leading-6::first-letter {
  line-height: 1.5rem;
}

.before\:absolute::before {
  content: var(--tw-content);
  position: absolute;
}

.before\:-left-12::before {
  content: var(--tw-content);
  left: -3rem;
}

.before\:top-0::before {
  content: var(--tw-content);
  top: 0px;
}

.before\:h-10::before {
  content: var(--tw-content);
  height: 2.5rem;
}

.before\:w-10::before {
  content: var(--tw-content);
  width: 2.5rem;
}

.before\:bg-pen::before {
  content: var(--tw-content);
  background-image: url('/assets/images/icons/pen.svg');
}

.before\:bg-cover::before {
  content: var(--tw-content);
  background-size: cover;
}

.before\:bg-center::before {
  content: var(--tw-content);
  background-position: center;
}

.before\:bg-no-repeat::before {
  content: var(--tw-content);
  background-repeat: no-repeat;
}

.hover\:text-accent:hover {
  --tw-text-opacity: 1;
  color: rgb(var(--accent) / var(--tw-text-opacity));
}

.hover\:no-underline:hover {
  text-decoration-line: none;
}

.hover\:ring:hover {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.hover\:ring-accent:hover {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(var(--accent) / var(--tw-ring-opacity));
}

.hover\:ring-offset-2:hover {
  --tw-ring-offset-width: 2px;
}

.hover\:ring-offset-dark:hover {
  --tw-ring-offset-color: rgb(var(--dark) / 1);
}

.active\:translate-y-\[2px\]:active {
  --tw-translate-y: 2px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.active\:transform:active {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.dark\:border-zinc-700:is(.dark *) {
  --tw-border-opacity: 1;
  border-color: rgb(63 63 70 / var(--tw-border-opacity));
}

.dark\:text-gray-300:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity));
}

@media (min-width: 640px) {

  .sm\:ml-20 {
    margin-left: 5rem;
  }

  .sm\:mr-12 {
    margin-right: 3rem;
  }

  .sm\:min-h-64 {
    min-height: 16rem;
  }
}

@media (min-width: 768px) {

  .md\:min-h-\[25rem\] {
    min-height: 25rem;
  }

  .md\:columns-2 {
    columns: 2;
  }
}

@media (min-width: 1280px) {

  .xl\:columns-3 {
    columns: 3;
  }
}
/*# sourceMappingURL=main.min.css.map */
